name: Build
on:
  push:
    # Sequence of patterns matched against refs/heads
    #branches:
    #  - 'dev*'   # Push events on dev branchs

#pull_request:
    # Sequence of patterns matched against refs/tags
    #tags:        
    #  - 'v*'  # Push events to v1.0.0 (and the like) tag
    
jobs:

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:

    - name: Set up Go 1.13
      uses: actions/setup-go@v1
      with:
        go-version: 1.13

    - name: Check out source code
      uses: actions/checkout@v1

    - name: Extract branch name, short SHA, date etc. into variables
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        echo "##[set-output name=commit;]$(echo ${GITHUB_SHA:0:7})"
        echo "##[set-output name=date;]$(echo $(date -u --iso-8601=seconds))"
        echo "##[set-output name=date_version;]$(echo $(date -u +%Y%m%d.%H%M%S))"
        echo "##[set-output name=copyright;]$(echo Â© $(date -u +%Y) Sevenate)"
        echo "##[set-output name=name_exe;]letitgo.exe"
      id: info

    - name: Print variables
      run: |
        echo branch=${{ steps.info.outputs.branch }}
        echo commit=${{ steps.info.outputs.commit }}
        echo date=${{ steps.info.outputs.date }}
        echo date_version=${{ steps.info.outputs.date_version }}
        echo copyright=${{ steps.info.outputs.copyright }}
        echo name_exe=${{ steps.info.outputs.name_exe }}

    #- name: Commitsar Action
    #  uses: commitsar-app/commitsar@v0.7.0

    - name: Generate static.go
      # add executables installed with go get to PATH
      # TODO: this will hopefully be fixed by
      # https://github.com/actions/setup-go/issues/14
      run: |
        export PATH=${PATH}:`go env GOPATH`/bin
        go get -u github.com/mjibson/esc
        esc -o static.go -prefix static static

    - name: Generate resource.syso
      # add executables installed with go get to PATH
      # TODO: this will hopefully be fixed by
      # https://github.com/actions/setup-go/issues/14
      run: |
        export PATH=${PATH}:`go env GOPATH`/bin
        go get -u github.com/josephspurrier/goversioninfo/cmd/goversioninfo
        goversioninfo -64 -copyright="${{ steps.info.outputs.copyright }}" -original-name="${{ steps.info.outputs.name_exe }}" -ver-major=0 -ver-minor=1 -ver-patch=0 -ver-build=0 -product-version="${{ steps.info.outputs.date_version }}-${{ steps.info.outputs.branch }}-${{ steps.info.outputs.commit }}"

    #- name: Generate the code (go generate)
    #  run: |
    #    go generate

    - name: Check style (gofmt)
      run: |
        diff -u <(echo -n) <(gofmt -d -s .)

    - name: Vet the code (go vet)
      run: |
        go vet $(go list ./... | grep -v /vendor/)

    - name: Run staticcheck
      # add executables installed with go get to PATH
      # TODO: this will hopefully be fixed by
      # https://github.com/actions/setup-go/issues/14
      run: |
        export PATH=${PATH}:`go env GOPATH`/bin
        go get -u honnef.co/go/tools/cmd/staticcheck
        staticcheck ./...

    - name: Run tests
      run: go test -v -tags test -race -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Build (gox)
      # add executables installed with go get to PATH
      # TODO: this will hopefully be fixed by
      # https://github.com/actions/setup-go/issues/14
      run: |
        export PATH=${PATH}:`go env GOPATH`/bin
        go get -u github.com/mitchellh/gox
        gox -os="linux darwin windows" -arch="amd64" -output="bin/{{.Dir}}-{{.OS}}-{{.Arch}}" -ldflags "-X main.version=0.1 -X main.date=${{ steps.info.outputs.date }} -X main.commit=${{ steps.info.outputs.commit }}" -verbose ./...

    #- name: Build (go build)
    #  run: go build -v -ldflags "-X main.version=0.1 -X main.date=`date -u --iso-8601=seconds` -X main.commit=`git rev-parse --short HEAD`"

    - name: Upload letitgo-windows-amd64.exe
      uses: actions/upload-artifact@master
      with:
        name: letitgo-windows-amd64.exe
        path: bin/letitgo-windows-amd64.exe

    - name: Upload letitgo-darwin.amd64
      uses: actions/upload-artifact@master
      with:
        name: letitgo-darwin-amd64
        path: bin/letitgo-darwin-amd64

    - name: Upload letitgo-linux-amd64
      uses: actions/upload-artifact@master
      with:
        name: letitgo-linux-amd64
        path: bin/letitgo-linux-amd64

    - name: Upload coverage.txt
      uses: actions/upload-artifact@master
      with:
        name: coverage.txt
        path: coverage.txt